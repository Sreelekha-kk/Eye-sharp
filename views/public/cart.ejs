<!doctype html>

<html lang="en">
  <head>
   
    
      <%-include("./includes/headerPart.ejs")%>
	  <style>
	.cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.product-image img {
    max-width: 150px;
    max-height: 150px;
    object-fit: cover;
}

.product-details {
    flex-grow: 1;
    margin-left: 20px;
}

.product-details p {
    color: black;
    font-size: 16px;
    font-weight: bold;
}

.product-details h5 {
    color: #333;
    font-size: 18px;
    font-weight: bold;
    margin-top: 5px;
}

.product-count {
    display: flex;
    align-items: center;
}

.quantity {
    width: 40px;
    text-align: center;
    font-size: 16px;
    font-weight: bold;
}

.remove-action {
    font-size: 20px;
    color: #777;
}

.remove-action a {
    text-decoration: none;
    color: #777;
}

.remove-action a:hover {
    color: #e74c3c; /* Change to your desired color */
}

.checkout-buttons {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.subtotal {
    font-size: 14px; /* Adjust the font size as needed */
}

.btn-rectangle {
    background-color: #FFD700; /* Change to your desired background color */
    color: #000; /* Change to your desired text color */
    font-size: 14px; /* Adjust the font size as needed */
    padding: 10px 15px; /* Adjust the padding as needed */
    border-radius: 5px; /* Adjust the border-radius as needed */
    margin-right: 10px; /* Adjust the spacing between buttons as needed */
    text-decoration: none;
    text-align: center;
}

.btn-rectangle:hover {
    background-color: #FFA500; /* Change to your desired hover background color */
    color: #fff; /* Change to your desired hover text color */
}
 /* Define the animation keyframes */
 @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-30px);
            }
            60% {
                transform: translateY(-15px);
            }
        }

        /* Apply the animation to the colorful shopping bag image */
        .cart-image {
            width: 150px; /* Adjust the size as needed */
            animation: bounce 2s infinite;
        }

        /* Style the empty cart message */
        .empty-cart-message {
            font-size: 24px; /* Adjust the font size as needed */
            color: #333; /* Adjust the text color as needed */
        }

    </style>
  </head>
  <body>
   
		

	<!-- Header -->
  <div>
	<%-include('./includes/header.ejs')%>
  </div>

	<!-- breadcrumb -->
	<div class="container pt-5">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg pt-5">
			<a href="/home" class="stext-109 cl8 hov-cl1 trans-04">
				Home
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>

			<span class="stext-109 cl4">
				Shoping Cart
			</span>
		</div>
	</div>
		<!-- Shoping Cart -->
<!-- Shoping Cart --><form class="bg0 p-t-75 p-b-85">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
                <div class="m-l-25 m-r--38 m-lr-0-xl">
                    <% if (cart.length != 0) { %>
                        <div class="product-list">
                            <% cart.forEach(function(cart, index) { %>
                                <!-- Inside your shopping cart loop -->
                              <!-- Inside your shopping cart loop -->
<div class="cart-item">
    <div class="product-image">
        <img src="../admin/assets/images/products/SavedPictures/<%= cart.carted.images[0] %>" alt="<%= cart.carted.name %>">
    </div>
    <div class="product-details">
        <p><a href="/productPage?id=<%= cart.carted._id %>"><%= cart.carted.name %></a></p>
        <h5><i class="fa fa-inr" aria-hidden="true"></i> <%= cart.carted.price %></h5>
        <div class="product-count">
            <button class="decrement-button" onclick="changeQuantity('<%= cart._id %>','<%=cart.item%>','<%=user._id%>','<%=index%>',-1)">-</button>
            <input type="number" name="qty" id="qty-val-<%= cart.item %>" class="quantity" value="<%= cart.quantity %>" readonly><span id="qty-val-<%= cart.item %>" class="qty-val"></span>
            <button class="increment-button" onclick="changeQuantity('<%= cart._id %>','<%=cart.item%>','<%=user._id%>','<%=index%>',1)">+</button>
        </div>
        <div class="subTotalVal">₹<%= cart.total %></div>
    </div>
    <div class="remove-action">
        <a href="#" class="text-muted" onclick="deleteProduct('<%= cart._id %>','<%= cart.item %>','<%= cart.quantity %>')"><i class="fa fa-trash" aria-hidden="true"></i></a>
    </div>
</div>
<!-- End of shopping cart loop -->

                                <!-- End of shopping cart loop -->
                            <% }) %>
                        </div>

                        <div class="checkout-buttons">
                            <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
                                <div class="flex-w flex-m m-r-20 m-tb-5">
                                    <div class="subtotal">
                                        <p class="stext-101 cl2 size-118" id="subtotal-display">Sub Total: ₹0.00</p>
                                    </div>
                                </div>
                            </div>

                            <div class="checkout_btn_inner d-flex align-items-center">
                                <a class="btn-rectangle flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 trans-04 pointer m-tb-5"
                                    href="/shop">Continue Shopping</a>
                                <a class="btn-rectangle flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 trans-04 pointer m-tb-5"
                                    href="/checkOut">Checkout</a>
                            </div>
                        </div>

                    <% } else { %>
                    <center>
                        <div class="text-center">
                            <div class="col-md-lg-5">
                                <div class="typography">
                                    <!-- Add a colorful shopping bag image -->
                                    <img class="cart-image" src="../public/images/cart1.jpg" alt="Colorful Shopping Bag">
                                    <h1 class="empty-cart-message">Your Cart is Empty</h1>
                                </div>
                                <p class="text-muted">Looks like you haven't added any items to your cart yet.</p>
                            </div>
                            <a class="btn btn-primary btn-lg m-3" href="/shop">Browse Products</a>
                        </div>
                        
                    </center>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</form>


	<%- include("./includes/footer.ejs") %>


	<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
	// Add this JavaScript code to your page

// Function to calculate and update the subtotal
// Function to calculate the subtotal
// Function to calculate and update the subtotal
function calculateSubtotal() {
    const cartItems = document.querySelectorAll('.cart-item');
    let subtotal = 0;

    cartItems.forEach((cartItem) => {
        const price = parseFloat(cartItem.querySelector('.product-details h5').textContent.replace('₹', ''));
        const quantity = parseFloat(cartItem.querySelector('.quantity').value);
        subtotal += price * quantity;
    });

    return subtotal;
}

// Function to update the subtotal
function updateSubtotal() {
    const subtotal = calculateSubtotal();
    // Display the subtotal
    document.getElementById('subtotal-display').textContent = `Sub Total: ₹${subtotal.toFixed(2)}`;
}

// Listen for changes in quantity input fields
const quantityInputs = document.querySelectorAll('.quantity');
quantityInputs.forEach((quantityInput) => {
    quantityInput.addEventListener('input', () => {
        updateSubtotal();
    });
});

// Calculate and display the initial subtotal
updateSubtotal();



</script>
	<script>
		function deleteProduct(cartId, proId, quantity){
			Swal.fire({
				title: 'Are you sure?',
      			text: "You won't be able to revert this!",
      			icon: 'warning',
      			showCancelButton: true,
      			confirmButtonColor: '#3085d6',
      			cancelButtonColor: '#d33',
      			confirmButtonText: 'Yes, delete it!',
      			timer: 3000
			}).then((result) => {
				if(result.isConfirmed) {
					$.ajax({
						url: '/delete-product-cart',
          				method: 'DELETE',
          				data: {
            				cartId: cartId,
            				proId: proId,
            				quantity: quantity
          				},
          				success: (response) => {
            				if (response.status) {
              				location.reload()
            				}
          				}
					})
				}
			})
		}

		function changeQuantity (cartId, proId, userId, index, count){
            console.log("sree")
            console.log("Function called!");
            console.log(cartId);
			event.preventDefault();
			const quantity = document.getElementById(`qty-val-${proId}`).value
			count = parseInt(count)
			console.log("nahala");
			if(quantity == 1 && count == -1){
				Swal.fire({
					title: "Delete item from cart?",
					text: "You won't be able to revert this!",
					icon: 'warning',
              		showCancelButton: true,
              		confirmButtonColor: '#3085d6',
              		cancelButtonColor: '#d33',
              		confirmButtonText: 'Yes, delete it!',
              	
				}).then((result) => {
					if(result.isConfirmed){
						$.ajax({
							url: '/change-product-quantity',
							method: 'PUT',
							data: {
								cartId: cartId,
								proId: proId,
								userId: userId,
								count: count,
								quantity: quantity
							},
							success: (response) => {
								console.log(response.status)
								if(response.status){
								location.reload()
								}
							}
						})
					}
				})
			}else{
				$.ajax({
					url: '/change-product-quantity',
					method: 'PUT',
					data: {
						cartId: cartId,
						proId: proId,
						userId: userId,
						count: count,
						quantity: quantity
					},
					success: (response) => {
						if(response.status == true){
							const qtyElem = document.querySelector(`#qty-val-${proId}`)
							qtyElem.value = response.newQuantity
							const subTotalVal = document.querySelector(`#subTotal-${proId}`)
							subTotalVal.innerHTML = response.newSubTotal
							document.getElementById('total').innerHTML = response.cartTotal
						}else if(response.status == 'outOfStock'){
							Swal.fire({
								icon: 'warning',
								title: 'Out Of Stock',
								showConfirmButton: false,
								timer: 5000
							})
						}
					}
				})
			}
		}
	</script>
